/* Variable declarations at the top of the file */
$size: 350px;
$layer: 20;

/* Center the entire content on the screen */
.fullscreen {
    margin-top: 57px; /* Adjust for navbar height to avoid overlap with content */
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh; /* Changed from height to min-height to allow scroll */
    flex-direction: column;
    position: relative;
    color: #fff;
    background: radial-gradient(ellipse at bottom, #0d1d31 0%, #0c0d13 100%);
    font-family: 'Roboto', sans-serif;
    text-align: center;
    z-index: 2; /* Make sure this is above the background animation */
}

/* Styling for the typing text (title) */
.typing-text {
    font-size: 3.5rem;
    font-weight: lighter;
    white-space: nowrap;
    overflow: hidden;
    border-right: 3px solid #fff;
    padding-right: 5px;
    animation: blink 0.7s step-end infinite;
    z-index: 3; /* Ensure it's above the animation */
}

/* Event details positioned below the title without affecting its position */
.event-details {
    position: absolute;
    top: 53.5%; /* Adjust as needed to position below the title */
    opacity: 0;
    animation: fadeIn 2s forwards;
    font-size: 1.5rem;
    z-index: 2; /* This should also be above the background */
}

/* Blinking cursor animation for the title */
@keyframes blink {
    50% {
        border-color: transparent;
    }
}

/* Fade-in animation for event details */
@keyframes fadeIn {
    to {
        opacity: 1;
    }
}

body {
  background: radial-gradient(ellipse at bottom, #1b2735 0%, #090a0f 100%);
  height: 100vh;
  overflow: hidden;
  display: flex;
  font-family: 'Anton', sans-serif;
  justify-content: center;
  align-items: center;
  perspective: 1000px;
}

/* Fullscreen container background */
.container {
  position: absolute;
  top: 0;
  left: 0;
  width: calc(100vw - 15px); /* Subtract the extra 15px causing the overflow */
  height: 100vh;
  display: grid;
  grid-template-rows: repeat(20, 5vh);
  grid-template-columns: repeat(20, 5vw);
  transform-style: preserve-3d;
  z-index: 1;
  overflow: hidden; /* Prevent overflow */
}


/* Monitor and animation layers */
.monitor {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  transform-style: preserve-3d;
  z-index: 1; /* Same z-index as .container to keep them together */
}

.trigger {
  &:active ~ .monitor {
    .vr_layer_item {
      width: 40%;
      height: 40%;
      border-radius: 5px;
    }
  }

  @for $i from 1 through 20 {
    @for $j from 1 through 20 {
      $key: ($i - 1) * 20 + $j;

      &:nth-child(#{$key}) {
        &:hover ~ .monitor {
          .camera {
            &.o-y {
              transform: rotateY(($j - 10) * -8deg);
            }
            
            &.o-x {
              transform: rotateX(($i - 10) * 8deg);
            }
          }
        }
        
        // Apply narrower width to last column items
        @if $j == 20 {
          width: 90%; // Adjust this value as needed
        }
      }
    }
  }
}




/* Adjust camera perspective */
.camera {
  position: absolute;
  width: 100%;
  height: 100%;
  transform-style: preserve-3d;
  transition: 500ms;
  
  &.o-y {
    transform: rotateY(-30deg);
  }
}


.vr {
  position: absolute;
  top: 50%;
  left: 50%;
  width: $size;
  height: $size;
  transform: translate(-50%, -50%);
  transform-style: preserve-3d;

  &_layer {
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    border: 1px solid rgba(#fff, 0.2);
    background: rgba(#09f, 0.006);
    border-radius: 10px;
    transform: preserve-3d;

    @for $i from 1 through $layer {
      &:nth-child(#{$i}) {
        transform: translateZ($i * $size / $layer - $size / 2);
      }
      
      &:nth-child(#{$i}) &_item {
        animation-delay: $i * -210ms;
      }
    }
    
    &_item {
      width: 70%;
      height: 70%;
      border: 3px solid #fff;
      border-radius: 100%;
      background: rgba(#000, 0.05);
      animation: sphere 3000ms cubic-bezier(0.215, 0.610, 0.355, 1.000) alternate infinite, color 5000ms linear alternate infinite;
      transition: 500ms;
    }
  }
}




.vr_layer {
  position: absolute;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  border: 1px solid rgba(#fff, 0.2);
  background: rgba(#09f, 0.006);
  border-radius: 10px;
  transform: preserve-3d;
}

.vr_layer_item {
  width: 70%;
  height: 70%;
  border: 3px solid #fff;
  border-radius: 100%;
  background: rgba(#000, 0.05);
  animation: sphere 3000ms cubic-bezier(0.215, 0.610, 0.355, 1.000) alternate infinite, color 5000ms linear alternate infinite;
  transition: 500ms;
}

@keyframes sphere {
  0% {
    transform: scale(0) rotateZ(45deg);
  }
  
  50% {
    transform: scale(0) rotateZ(45deg);
  }
  
  100% {
    transform: scale(1) rotateZ(45deg);
  }
}

@keyframes color {
  0% {
    border-color: #f55;
  }
  
  50% {
    border-color: #55f;
  }
  
  100% {
    border-color: #5f5;
  }
}

$size: 350px;
$layer: 20;

